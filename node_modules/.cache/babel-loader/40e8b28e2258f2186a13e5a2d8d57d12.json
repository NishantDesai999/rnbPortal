{"ast":null,"code":"import _classCallCheck from \"E:\\\\Codes\\\\react\\\\portal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Codes\\\\react\\\\portal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Codes\\\\react\\\\portal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Codes\\\\react\\\\portal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Codes\\\\react\\\\portal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Codes\\\\react\\\\portal\\\\src\\\\Officer\\\\DashboardRoot.js\";\nimport React, { Component } from 'react'; // import { Route, Switch, Redirect } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport AllInbox from '@material-ui/icons/AllInbox';\nimport AddAlert from '@material-ui/icons/AddAlert';\nimport Timer from '@material-ui/icons/Timer';\nimport Check from '@material-ui/icons/Check';\nimport CardBox from '../Components/DashboardCard';\nimport DashboardCard from '../Components/DashboardCard';\n\nvar styles = function styles(theme) {\n  return {\n    wrapper: {\n      marginTop: '-56px',\n      width: '100vw',\n      height: '100vh',\n      display: 'flex'\n    }\n  };\n};\n\nvar DashboardRoot =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DashboardRoot, _Component);\n\n  function DashboardRoot() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DashboardRoot);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DashboardRoot)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      startAnimation: false,\n      cardData: [{\n        name: \"Total\",\n        value: 10,\n        icon: AllInbox,\n        color: \"primary\"\n      }, {\n        name: \"Emergency\",\n        value: 10,\n        icon: AddAlert,\n        color: \"danger\"\n      }, {\n        name: \"Pending\",\n        value: 10,\n        icon: Timer,\n        color: \"alert\"\n      }, {\n        name: \"Completed\",\n        value: 10,\n        icon: Check,\n        color: \"success\"\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(DashboardRoot, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        startAnimation: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        className: classes.wrapper,\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          margin: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        style: {\n          margin: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(CardBox, {\n        startAnimation: this.state.startAnimation,\n        CardIcon: this.state.cardData[0].icon,\n        CardName: this.state.cardData[0].name,\n        CardValue: this.state.cardData[0].value,\n        CardColor: this.state.cardData[0].color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(CardBox, {\n        startAnimation: this.state.startAnimation,\n        CardIcon: this.state.cardData[1].icon,\n        CardName: this.state.cardData[1].name,\n        CardValue: this.state.cardData[1].value,\n        CardColor: this.state.cardData[1].color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(CardBox, {\n        startAnimation: this.state.startAnimation,\n        CardIcon: this.state.cardData[2].icon,\n        CardName: this.state.cardData[2].name,\n        CardValue: this.state.cardData[2].value,\n        CardColor: this.state.cardData[2].color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(CardBox, {\n        startAnimation: this.state.startAnimation,\n        CardIcon: this.state.cardData[3].icon,\n        CardName: this.state.cardData[3].name,\n        CardValue: this.state.cardData[3].value,\n        CardColor: this.state.cardData[3].color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return DashboardRoot;\n}(Component);\n\nDashboardRoot.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(DashboardRoot);","map":{"version":3,"sources":["E:\\Codes\\react\\portal\\src\\Officer\\DashboardRoot.js"],"names":["React","Component","PropTypes","withStyles","Grid","AllInbox","AddAlert","Timer","Check","CardBox","DashboardCard","styles","theme","wrapper","marginTop","width","height","display","DashboardRoot","state","startAnimation","cardData","name","value","icon","color","setState","classes","props","textAlign","margin","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import { Route, Switch, Redirect } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport AllInbox from '@material-ui/icons/AllInbox';\nimport AddAlert from '@material-ui/icons/AddAlert';\nimport Timer from '@material-ui/icons/Timer';\nimport Check from '@material-ui/icons/Check';\n\nimport CardBox from '../Components/DashboardCard';\nimport DashboardCard from '../Components/DashboardCard';\n\nconst styles = theme => ({\n    wrapper: {\n        marginTop: '-56px',\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n    }\n})\n\n\nclass DashboardRoot extends Component {\n\n    state = {\n        startAnimation: false,\n        cardData: [\n            {\n                name: \"Total\",\n                value: 10,\n                icon: AllInbox,\n                color: \"primary\"\n            },\n            {\n                name: \"Emergency\",\n                value: 10,\n                icon: AddAlert,\n                color: \"danger\"\n            },\n            {\n                name: \"Pending\",\n                value: 10,\n                icon: Timer,\n                color: \"alert\"\n            },\n            {\n                name: \"Completed\",\n                value: 10,\n                icon: Check,\n                color: \"success\"\n            }\n        ]\n    }\n\n    componentDidMount() {\n        this.setState({\n            startAnimation: true\n        })\n    }\n\n    render() {\n        let { classes } = this.props;\n\n        return (\n          <div className={classes.wrapper} style={{textAlign: 'center'}}>\n            <div style={{margin: 'auto'}}>\n                <Grid container style={{margin:'auto'}}>\n                    <Grid item xs={12} md>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <CardBox startAnimation={this.state.startAnimation} CardIcon={this.state.cardData[0].icon} CardName={this.state.cardData[0].name} CardValue={this.state.cardData[0].value} CardColor={this.state.cardData[0].color} />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <CardBox startAnimation={this.state.startAnimation} CardIcon={this.state.cardData[1].icon} CardName={this.state.cardData[1].name} CardValue={this.state.cardData[1].value} CardColor={this.state.cardData[1].color} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} md>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <CardBox startAnimation={this.state.startAnimation} CardIcon={this.state.cardData[2].icon} CardName={this.state.cardData[2].name} CardValue={this.state.cardData[2].value} CardColor={this.state.cardData[2].color} />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <CardBox startAnimation={this.state.startAnimation} CardIcon={this.state.cardData[3].icon} CardName={this.state.cardData[3].name} CardValue={this.state.cardData[3].value} CardColor={this.state.cardData[3].color} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    \n                    {\n                        // this.state.cardData.map((item, index) => (\n                        //     <Grid item xs={6} md  />\n                        // ))\n                    }\n                </Grid>\n            </div>\n          </div>\n        );\n    }\n}\n\nDashboardRoot.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DashboardRoot);"]},"metadata":{},"sourceType":"module"}