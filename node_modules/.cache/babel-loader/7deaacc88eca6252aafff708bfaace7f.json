{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _WithUtils = _interopRequireDefault(require(\"./WithUtils\"));\n/* eslint-disable react/prop-types */\n\n\nvar getInitialDate = function getInitialDate(_ref) {\n  var utils = _ref.utils,\n      value = _ref.value,\n      initialFocusedDate = _ref.initialFocusedDate;\n  var initialDate = value || initialFocusedDate || utils.date();\n  var date = utils.date(initialDate);\n  return utils.isValid(date) ? date : utils.date();\n};\n\nvar BasePicker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(BasePicker, _React$Component);\n\n  function BasePicker() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      date: getInitialDate(_this.props),\n      isAccepted: false\n    };\n\n    _this.changeDate = function (date, callback) {\n      return _this.setState({\n        date: date\n      }, callback);\n    };\n\n    _this.handleAcceptedChange = function (isAccepted, callback) {\n      return _this.setState({\n        isAccepted: isAccepted\n      }, callback);\n    };\n\n    _this.handleClear = function () {\n      return _this.props.onChange(null);\n    };\n\n    _this.handleAccept = function () {\n      return _this.props.onChange(_this.state.date);\n    };\n\n    _this.handleSetTodayDate = function () {\n      return _this.handleChange(_this.props.utils.date(), false);\n    };\n\n    _this.handleTextFieldChange = function (date) {\n      var onChange = _this.props.onChange;\n\n      if (date === null) {\n        onChange(null);\n      } else {\n        _this.changeDate(date, function () {\n          return onChange(date);\n        });\n      }\n    };\n\n    _this.pick12hOr24hFormat = function (default12hFormat, default24hFormat) {\n      var _this$props = _this.props,\n          format = _this$props.format,\n          labelFunc = _this$props.labelFunc,\n          ampm = _this$props.ampm;\n\n      if (format || labelFunc) {\n        return format;\n      }\n\n      return ampm ? default12hFormat : default24hFormat;\n    };\n\n    _this.handleChange = function (newDate, isFinish) {\n      if (isFinish === void 0) {\n        isFinish = true;\n      }\n\n      var _assertThisInitialize = (0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)),\n          handleAcceptedChange = _assertThisInitialize.handleAcceptedChange,\n          changeDate = _assertThisInitialize.changeDate;\n\n      var _this$props2 = _this.props,\n          autoOk = _this$props2.autoOk,\n          onChange = _this$props2.onChange;\n      changeDate(newDate, function () {\n        if (isFinish && autoOk) {\n          onChange(newDate); // pass down accept true, and make it false in the next tick\n\n          handleAcceptedChange(true, function () {\n            return handleAcceptedChange(false);\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = BasePicker.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this$props3 = this.props,\n        utils = _this$props3.utils,\n        value = _this$props3.value;\n\n    if (prevProps.value !== value || prevProps.utils.locale !== utils.locale) {\n      this.changeDate(getInitialDate(this.props));\n    }\n  };\n\n  _proto.render = function render() {\n    return this.props.children((0, _extends2.default)({}, this.props, this.state, {\n      changeDate: this.changeDate,\n      handleAcceptedChange: this.handleAcceptedChange,\n      handleClear: this.handleClear,\n      handleAccept: this.handleAccept,\n      handleSetTodayDate: this.handleSetTodayDate,\n      handleTextFieldChange: this.handleTextFieldChange,\n      pick12hOr24hFormat: this.pick12hOr24hFormat,\n      handleChange: this.handleChange\n    }));\n  };\n\n  return BasePicker;\n}(React.Component);\n\nvar _default = (0, _WithUtils.default)()(BasePicker);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}