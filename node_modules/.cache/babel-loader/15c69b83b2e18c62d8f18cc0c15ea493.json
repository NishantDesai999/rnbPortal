{"ast":null,"code":"import _defineProperty from \"E:\\\\Codes\\\\react\\\\portal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"E:\\\\Codes\\\\react\\\\portal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Codes\\\\react\\\\portal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Codes\\\\react\\\\portal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Codes\\\\react\\\\portal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Codes\\\\react\\\\portal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Codes\\\\react\\\\portal\\\\src\\\\Components\\\\ComplaintFullView.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport MuiPickersUtilsProvider from 'material-ui-pickers/utils/MuiPickersUtilsProvider';\nimport DateFnsUtils from 'material-ui-pickers/utils/date-fns-utils';\nimport DatePicker from 'material-ui-pickers/DatePicker';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Slide from '@material-ui/core/Slide';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ImageCarousel from \"./ImageCarousel\";\nimport { getFormatedDate } from \"../constants\";\n\nvar styles = function styles(theme) {\n  return {\n    ComplaintFullView: {// overflow: 'hidden'\n    },\n    appBar: {\n      position: 'relative'\n    },\n    flex: {\n      flex: 1\n    },\n    alignCenter: {\n      textAlign: 'center',\n      margin: 'auto'\n    },\n    paddingClass: {\n      margin: '20px'\n    },\n    snackbar: {\n      background: theme.palette.primary.light // color: \"black\"\n\n    },\n    textField: {\n      // minWidth: '270px'\n      width: '100%' // marginleft: '10px'\n\n    },\n    textWrapper: {\n      padding: '10px'\n    },\n    formControl: {\n      minWidth: 280\n    }\n  };\n};\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }));\n}\n\nvar ComplaintFullView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ComplaintFullView, _Component);\n\n  function ComplaintFullView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ComplaintFullView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ComplaintFullView)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      new_estimated_time: null,\n      new_isEmergency: false,\n      new_complaint_status: \"Pending\",\n      Comment: null,\n      new_forword_complaint: null\n    };\n\n    _this.handleIsEmergency = function () {\n      _this.setState(function (prevState) {\n        return {\n          new_isEmergency: !prevState.new_isEmergency\n        };\n      });\n    };\n\n    _this.handleEstimatedDateChange = function (date) {\n      _this.setState({\n        new_estimated_time: getFormatedDate(date)\n      });\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handleComment = function (e) {\n      _this.setState({\n        Comment: e.target.value\n      });\n    };\n\n    _this.handleSave = function () {};\n\n    return _this;\n  }\n\n  _createClass(ComplaintFullView, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        new_complaint_status: this.props.complaintData ? this.props.complaintData.complaint_status : \"Pending\",\n        new_estimated_time: this.props.complaintData ? this.props.complaintData.estimated_time : null,\n        new_isEmergency: this.props.complaintData ? this.props.complaintData.isEmergency : false\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps() {\n      this.setState({\n        new_estimated_time: null,\n        new_isEmergency: false,\n        new_complaint_status: \"Pending\",\n        Comment: null,\n        new_forword_complaint: null\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var classes = props.classes;\n      var complaintData = props.ComplaintDialogData;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        fullScreen: true,\n        open: props.openComplaintDialogState,\n        onClose: props.handleComplaintDialogClose,\n        TransitionComponent: Transition,\n        className: classes.ComplaintFullView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        className: classes.appBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: \"inherit\",\n        onClick: props.handleComplaintDialogClose,\n        \"aria-label\": \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        variant: \"h6\",\n        color: \"inherit\",\n        className: classes.flex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Complaint\"), React.createElement(Button, {\n        color: \"inherit\",\n        onClick: this.handleSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Save\"))), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: true,\n        className: classes.paddingClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(ImageCarousel, {\n        postedUsers: complaintData ? complaintData.postedUsers : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: true,\n        className: classes.paddingClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"headline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, complaintData ? complaintData.name : null), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Grievance :   \".toUpperCase() + (complaintData ? complaintData.grievType : null), \" \", React.createElement(Button, {\n        color: \"secondary\",\n        size: \"small\",\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"view on map\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Status :   \".toUpperCase() + (complaintData ? complaintData.complaint_status : null)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Date :   \".toUpperCase() + (complaintData ? complaintData.time.slice(0, 10) : null)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Emergency :   \".toUpperCase() + (complaintData ? complaintData.isEmergency ? \"YES\" : \"NO\" : null)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Description :   \".toUpperCase() + (complaintData ? complaintData.description : null)), complaintData && complaintData.estimated_time ? React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), \"Estimated Date :   \".toUpperCase() + (complaintData ? complaintData.estimated_time : null)) : null, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: true,\n        className: classes.textWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        checked: this.state.new_isEmergency,\n        onChange: this.handleIsEmergency,\n        value: \"isEmergency\",\n        control: React.createElement(Checkbox, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }),\n        label: \"Mark Complaint as Emergency\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: true,\n        className: classes.textWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"complaint_status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Change Complaint Status\"), React.createElement(Select, {\n        value: this.state.new_complaint_status,\n        onChange: this.handleChange,\n        inputProps: {\n          name: 'new_complaint_status',\n          id: 'new_complaint_status'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"Pending\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Pending\"), React.createElement(MenuItem, {\n        value: \"Approved\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Approved\"), React.createElement(MenuItem, {\n        value: \"Rejected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Rejected\"), React.createElement(MenuItem, {\n        value: \"In Progress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"In Progress\"), React.createElement(MenuItem, {\n        value: \"Completed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Completed\"))))), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: true,\n        className: classes.textWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Set Estimated Date\"), React.createElement(DatePicker, {\n        error: this.state.estimated_time_Error,\n        helperText: this.state.estimated_time_helper_text,\n        value: this.state.new_estimated_time,\n        onChange: this.handleEstimatedDateChange,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        xs: 12,\n        md: true,\n        className: classes.textWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"new_forword_complaint\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Forword Complaint\"), React.createElement(Select, {\n        value: this.state.new_forword_complaint // onChange={this.handleChange}\n        ,\n        inputProps: {\n          name: 'new_forword_complaint',\n          id: 'new_forword_complaint'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"Pending\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Pending\"), React.createElement(MenuItem, {\n        value: \"Approved\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Approved\"), React.createElement(MenuItem, {\n        value: \"Rejected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Rejected\"), React.createElement(MenuItem, {\n        value: \"In Progress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"In Progress\"), React.createElement(MenuItem, {\n        value: \"Completed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Completed\"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"Comment\",\n        label: \"Comment\",\n        multiline: true,\n        error: this.state.comment_error,\n        helperText: this.state.comment_helper_text,\n        rows: \"4\",\n        onChange: this.handleComment // defaultValue=\"Enter Your Coment Here..\"\n        ,\n        className: classes.textField,\n        InputLabelProps: {\n          shrink: true\n        },\n        style: {\n          margin: '10px'\n        },\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ComplaintFullView;\n}(Component);\n\nComplaintFullView.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ComplaintFullView);","map":{"version":3,"sources":["E:\\Codes\\react\\portal\\src\\Components\\ComplaintFullView.js"],"names":["React","Component","PropTypes","withStyles","Grid","MuiPickersUtilsProvider","DateFnsUtils","DatePicker","Button","Dialog","Divider","AppBar","Toolbar","IconButton","Typography","FormControlLabel","Checkbox","FormControl","Select","InputLabel","MenuItem","TextField","Slide","CloseIcon","ImageCarousel","getFormatedDate","styles","theme","ComplaintFullView","appBar","position","flex","alignCenter","textAlign","margin","paddingClass","snackbar","background","palette","primary","light","textField","width","textWrapper","padding","formControl","minWidth","Transition","props","state","new_estimated_time","new_isEmergency","new_complaint_status","Comment","new_forword_complaint","handleIsEmergency","setState","prevState","handleEstimatedDateChange","date","handleChange","e","target","name","value","handleComment","handleSave","complaintData","complaint_status","estimated_time","isEmergency","classes","ComplaintDialogData","openComplaintDialogState","handleComplaintDialogClose","postedUsers","toUpperCase","grievType","float","time","slice","description","id","estimated_time_Error","estimated_time_helper_text","comment_error","comment_helper_text","shrink","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,uBAAP,MAAoC,mDAApC;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,eAAT,QAAgC,cAAhC;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,iBAAiB,EAAE,CACf;AADe,KADE;AAIrBC,IAAAA,MAAM,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN,KAJa;AAOrBC,IAAAA,IAAI,EAAE;AACFA,MAAAA,IAAI,EAAE;AADJ,KAPe;AAUrBC,IAAAA,WAAW,EAAE;AACTC,MAAAA,SAAS,EAAE,QADF;AAETC,MAAAA,MAAM,EAAE;AAFC,KAVQ;AAcrBC,IAAAA,YAAY,EAAE;AACVD,MAAAA,MAAM,EAAE;AADE,KAdO;AAiBrBE,IAAAA,QAAQ,EAAE;AACNC,MAAAA,UAAU,EAAEV,KAAK,CAACW,OAAN,CAAcC,OAAd,CAAsBC,KAD5B,CAEN;;AAFM,KAjBW;AAqBrBC,IAAAA,SAAS,EAAE;AACP;AACAC,MAAAA,KAAK,EAAE,MAFA,CAGP;;AAHO,KArBU;AA0BrBC,IAAAA,WAAW,EAAE;AACTC,MAAAA,OAAO,EAAE;AADA,KA1BQ;AA6BrBC,IAAAA,WAAW,EAAE;AACTC,MAAAA,QAAQ,EAAE;AADD;AA7BQ,GAAL;AAAA,CAApB;;AAkCA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,SAAO,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC;AAAjB,KAA0BA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH;;IAEKpB,iB;;;;;;;;;;;;;;;;;UAEFqB,K,GAAQ;AACJC,MAAAA,kBAAkB,EAAE,IADhB;AAEJC,MAAAA,eAAe,EAAE,KAFb;AAGJC,MAAAA,oBAAoB,EAAE,SAHlB;AAIJC,MAAAA,OAAO,EAAE,IAJL;AAKJC,MAAAA,qBAAqB,EAAE;AALnB,K;;UAQRC,iB,GAAoB,YAAM;AACtB,YAAKC,QAAL,CAAc,UAAAC,SAAS,EAAI;AACvB,eAAO;AAAEN,UAAAA,eAAe,EAAE,CAAEM,SAAS,CAACN;AAA/B,SAAP;AACH,OAFD;AAGH,K;;UAEDO,yB,GAA4B,UAACC,IAAD,EAAU;AAClC,YAAKH,QAAL,CAAc;AAAEN,QAAAA,kBAAkB,EAAEzB,eAAe,CAACkC,IAAD;AAArC,OAAd;AACH,K;;UAEDC,Y,GAAe,UAAAC,CAAC,EAAI;AAChB,YAAKL,QAAL,qBAAiBK,CAAC,CAACC,MAAF,CAASC,IAA1B,EAAiCF,CAAC,CAACC,MAAF,CAASE,KAA1C;AACH,K;;UAEDC,a,GAAgB,UAAAJ,CAAC,EAAI;AACjB,YAAKL,QAAL,CAAc;AACVH,QAAAA,OAAO,EAAEQ,CAAC,CAACC,MAAF,CAASE;AADR,OAAd;AAGH,K;;UAEDE,U,GAAa,YAAM,CAElB,C;;;;;;;yCAEoB;AACjB,WAAKV,QAAL,CAAc;AACVJ,QAAAA,oBAAoB,EAAE,KAAKJ,KAAL,CAAWmB,aAAX,GAA2B,KAAKnB,KAAL,CAAWmB,aAAX,CAAyBC,gBAApD,GAAuE,SADnF;AAEVlB,QAAAA,kBAAkB,EAAE,KAAKF,KAAL,CAAWmB,aAAX,GAA2B,KAAKnB,KAAL,CAAWmB,aAAX,CAAyBE,cAApD,GAAqE,IAF/E;AAGVlB,QAAAA,eAAe,EAAE,KAAKH,KAAL,CAAWmB,aAAX,GAA2B,KAAKnB,KAAL,CAAWmB,aAAX,CAAyBG,WAApD,GAAkE;AAHzE,OAAd;AAKH;;;gDAE2B;AACxB,WAAKd,QAAL,CAAc;AACVN,QAAAA,kBAAkB,EAAE,IADV;AAEVC,QAAAA,eAAe,EAAE,KAFP;AAGVC,QAAAA,oBAAoB,EAAE,SAHZ;AAIVC,QAAAA,OAAO,EAAE,IAJC;AAKVC,QAAAA,qBAAqB,EAAE;AALb,OAAd;AAOH;;;6BAEQ;AACL,UAAIN,KAAK,GAAG,KAAKA,KAAjB;AADK,UAEGuB,OAFH,GAEevB,KAFf,CAEGuB,OAFH;AAGL,UAAMJ,aAAa,GAAGnB,KAAK,CAACwB,mBAA5B;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACA,QAAA,UAAU,MADV;AAEA,QAAA,IAAI,EAAExB,KAAK,CAACyB,wBAFZ;AAGA,QAAA,OAAO,EAAEzB,KAAK,CAAC0B,0BAHf;AAIA,QAAA,mBAAmB,EAAE3B,UAJrB;AAKA,QAAA,SAAS,EAAEwB,OAAO,CAAC3C,iBALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAE2C,OAAO,CAAC1C,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAEmB,KAAK,CAAC0B,0BAA3C;AAAuE,sBAAW,OAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,KAAK,EAAC,SAA/B;AAAyC,QAAA,SAAS,EAAEH,OAAO,CAACxC,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJJ,EAOI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE,KAAKmC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,CADJ,CANJ,EAoBI,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,MAArB;AAAsB,QAAA,SAAS,EAAEK,OAAO,CAACpC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,aAAD;AAAe,QAAA,WAAW,EAAEgC,aAAa,GAAEA,aAAa,CAACQ,WAAhB,GAA8B,IAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,MAArB;AAAsB,QAAA,SAAS,EAAEJ,OAAO,CAACpC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCgC,aAAa,GAAEA,aAAa,CAACJ,IAAhB,GAAuB,IAArE,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,iBAAiBa,WAAjB,MAAkCT,aAAa,GAAEA,aAAa,CAACU,SAAhB,GAA4B,IAA3E,CAAd,OAAgG,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,IAAI,EAAC,OAA/B;AAAuC,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAhG,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAOI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,cAAcF,WAAd,MAA+BT,aAAa,GAAEA,aAAa,CAACC,gBAAhB,GAAmC,IAA/E,CAAd,CAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EASI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,YAAYQ,WAAZ,MAA6BT,aAAa,GAAEA,aAAa,CAACY,IAAd,CAAmBC,KAAnB,CAAyB,CAAzB,EAA4B,EAA5B,CAAF,GAAoC,IAA9E,CAAd,CATJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,EAWI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,iBAAiBJ,WAAjB,MAAkCT,aAAa,GAAGA,aAAa,CAACG,WAAf,GAA8B,KAA9B,GAAqC,IAAvC,GAA8C,IAA7F,CAAd,CAXJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,EAaI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,mBAAmBM,WAAnB,MAAoCT,aAAa,GAAEA,aAAa,CAACc,WAAhB,GAA8B,IAA/E,CAAd,CAbJ,EAcMd,aAAa,IAAIA,aAAa,CAACE,cAA/B,GAAgD,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ,EAAoB,sBAAsBO,WAAtB,MAAuCT,aAAa,GAAEA,aAAa,CAACE,cAAhB,GAAiC,IAArF,CAApB,CAAhD,GAA+K,IAdrL,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,EAgBI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,EAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBJ,EAkBI,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,MAArB;AAAsB,QAAA,SAAS,EAAEE,OAAO,CAAC5B,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AACI,QAAA,OAAO,EAAE,KAAKM,KAAL,CAAWE,eADxB;AAEI,QAAA,QAAQ,EAAE,KAAKI,iBAFnB;AAGI,QAAA,KAAK,EAAC,aAHV;AAII,QAAA,OAAO,EAAG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJd;AAKI,QAAA,KAAK,EAAC,6BALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EASI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,MAArB;AAAsB,QAAA,SAAS,EAAEgB,OAAO,CAAC5B,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAE4B,OAAO,CAAC1B,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAE,KAAKI,KAAL,CAAWG,oBADtB;AAEI,QAAA,QAAQ,EAAE,KAAKQ,YAFnB;AAGI,QAAA,UAAU,EAAE;AACRG,UAAAA,IAAI,EAAE,sBADE;AAERmB,UAAAA,EAAE,EAAE;AAFI,SAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,SAAhB;AAA0B,QAAA,QAAQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPJ,EAQI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ,EASI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,EAUI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAVJ,EAWI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXJ,CAFJ,CADJ,CATJ,CAlBJ,EA8CI,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,MAArB;AAAsB,QAAA,SAAS,EAAEX,OAAO,CAAC5B,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,uBAAD;AAAyB,QAAA,KAAK,EAAErC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI,oBAAC,UAAD;AACI,QAAA,KAAK,EAAE,KAAK2C,KAAL,CAAWkC,oBADtB;AAEI,QAAA,UAAU,EAAE,KAAKlC,KAAL,CAAWmC,0BAF3B;AAGI,QAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWC,kBAHtB;AAII,QAAA,QAAQ,EAAE,KAAKQ,yBAJnB;AAKI,QAAA,KAAK,EAAE;AAAChB,UAAAA,KAAK,EAAE;AAAR,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,CADJ,EAaI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,EAAV;AAAc,QAAA,EAAE,MAAhB;AAAiB,QAAA,SAAS,EAAE6B,OAAO,CAAC5B,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAE4B,OAAO,CAAC1B,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,uBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAE,KAAKI,KAAL,CAAWK,qBADtB,CAEI;AAFJ;AAGI,QAAA,UAAU,EAAE;AACRS,UAAAA,IAAI,EAAE,uBADE;AAERmB,UAAAA,EAAE,EAAE;AAFI,SAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,SAAhB;AAA0B,QAAA,QAAQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARJ,EASI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,EAUI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,EAWI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAXJ,EAYI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAZJ,CAFJ,CADJ,CAbJ,CA9CJ,EA+EI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/EJ,EAgFI,oBAAC,SAAD;AACI,QAAA,EAAE,EAAC,SADP;AAEI,QAAA,KAAK,EAAC,SAFV;AAGI,QAAA,SAAS,MAHb;AAII,QAAA,KAAK,EAAE,KAAKjC,KAAL,CAAWoC,aAJtB;AAKI,QAAA,UAAU,EAAE,KAAKpC,KAAL,CAAWqC,mBAL3B;AAMI,QAAA,IAAI,EAAC,GANT;AAOI,QAAA,QAAQ,EAAE,KAAKrB,aAPnB,CAQI;AARJ;AASI,QAAA,SAAS,EAAEM,OAAO,CAAC9B,SATvB;AAUI,QAAA,eAAe,EAAE;AACb8C,UAAAA,MAAM,EAAE;AADK,SAVrB;AAaI,QAAA,KAAK,EAAE;AAACrD,UAAAA,MAAM,EAAE;AAAT,SAbX;AAcI,QAAA,MAAM,EAAC,QAdX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhFJ,CAJJ,CApBJ,CADJ,CADJ;AAsIH;;;;EA9L2BjC,S;;AAiMhC2B,iBAAiB,CAAC4D,SAAlB,GAA8B;AAC9BjB,EAAAA,OAAO,EAAErE,SAAS,CAACuF,MAAV,CAAiBC;AADI,CAA9B;AAIA,eAAevF,UAAU,CAACuB,MAAD,CAAV,CAAmBE,iBAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport MuiPickersUtilsProvider from 'material-ui-pickers/utils/MuiPickersUtilsProvider';\nimport DateFnsUtils from 'material-ui-pickers/utils/date-fns-utils';\nimport DatePicker from 'material-ui-pickers/DatePicker';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Slide from '@material-ui/core/Slide';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport ImageCarousel from \"./ImageCarousel\";\nimport { getFormatedDate } from \"../constants\";\n\nconst styles = theme => ({\n    ComplaintFullView: {\n        // overflow: 'hidden'\n    },\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    alignCenter: {\n        textAlign: 'center',\n        margin: 'auto'\n    },\n    paddingClass: {\n        margin: '20px'\n    },\n    snackbar: {\n        background: theme.palette.primary.light,\n        // color: \"black\"\n    },\n    textField: {\n        // minWidth: '270px'\n        width: '100%',\n        // marginleft: '10px'\n    },\n    textWrapper: {\n        padding: '10px'\n    }, \n    formControl: {\n        minWidth: 280,\n    },\n});\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nclass ComplaintFullView extends Component {\n\n    state = {\n        new_estimated_time: null,\n        new_isEmergency: false,\n        new_complaint_status: \"Pending\",\n        Comment: null,\n        new_forword_complaint: null\n    }\n\n    handleIsEmergency = () => {        \n        this.setState(prevState => {\n            return { new_isEmergency: !(prevState.new_isEmergency) }\n        })\n    }\n\n    handleEstimatedDateChange = (date) => {\n        this.setState({ new_estimated_time: getFormatedDate(date) });\n    }\n\n    handleChange = e => {    \n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    handleComment = e => {\n        this.setState({\n            Comment: e.target.value\n        })\n    }\n\n    handleSave = () => {\n    \n    }\n\n    componentWillMount() {\n        this.setState({\n            new_complaint_status: this.props.complaintData ? this.props.complaintData.complaint_status : \"Pending\",\n            new_estimated_time: this.props.complaintData ? this.props.complaintData.estimated_time : null,\n            new_isEmergency: this.props.complaintData ? this.props.complaintData.isEmergency : false\n        })\n    }\n\n    componentWillReceiveProps() {\n        this.setState({\n            new_estimated_time: null,\n            new_isEmergency: false,\n            new_complaint_status: \"Pending\",\n            Comment: null,\n            new_forword_complaint: null\n        })\n    }\n\n    render() {\n        let props = this.props;\n        const { classes } = props;\n        const complaintData = props.ComplaintDialogData;\n        return (\n            <div>\n                <Dialog\n                fullScreen\n                open={props.openComplaintDialogState}\n                onClose={props.handleComplaintDialogClose}\n                TransitionComponent={Transition}\n                className={classes.ComplaintFullView} >\n                    <AppBar className={classes.appBar}>\n                        <Toolbar>\n                            <IconButton color=\"inherit\" onClick={props.handleComplaintDialogClose} aria-label=\"Close\">\n                                <CloseIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                                    Complaint\n                            </Typography>\n                            <Button color=\"inherit\" onClick={this.handleSave}>\n                                Save\n                            </Button>\n                        </Toolbar>\n                    </AppBar>\n                {/* complaint content here */}\n                    <Grid container>\n                        <Grid item xs={12} md className={classes.paddingClass}>\n                            <ImageCarousel postedUsers={complaintData? complaintData.postedUsers : null} />\n                        </Grid>\n                        <Grid item xs={12} md className={classes.paddingClass}>\n                            <Typography variant=\"headline\">{(complaintData? complaintData.name : null)}</Typography>\n                            <br />\n                            <Divider />\n                            <br />\n                            <Typography>{ \"Grievance :   \".toUpperCase() + (complaintData? complaintData.grievType : null)} <Button color=\"secondary\" size=\"small\" style={{float: 'right'}}>view on map</Button></Typography>\n                            <br />\n                            <Typography>{ \"Status :   \".toUpperCase() + (complaintData? complaintData.complaint_status : null)}</Typography>\n                            <br />\n                            <Typography>{ \"Date :   \".toUpperCase() + (complaintData? complaintData.time.slice(0, 10) : null)}</Typography>\n                            <br />\n                            <Typography>{ \"Emergency :   \".toUpperCase() + (complaintData? (complaintData.isEmergency) ? \"YES\": \"NO\" : null)}</Typography>\n                            <br />\n                            <Typography>{ \"Description :   \".toUpperCase() + (complaintData? complaintData.description : null)}</Typography>\n                            { complaintData && complaintData.estimated_time ? <Typography><br />{ \"Estimated Date :   \".toUpperCase() + (complaintData? complaintData.estimated_time : null)}</Typography> : null }\n                            <br />\n                            <Divider />\n                            <br />\n                            <Grid container>\n                                <Grid item xs={12} md className={classes.textWrapper}>\n                                    <FormControlLabel\n                                        checked={this.state.new_isEmergency}\n                                        onChange={this.handleIsEmergency}\n                                        value=\"isEmergency\"\n                                        control={ <Checkbox /> }\n                                        label=\"Mark Complaint as Emergency\" />\n                                </Grid>\n                                <Grid item xs={12} md className={classes.textWrapper}>\n                                    <FormControl className={classes.formControl}>\n                                        <InputLabel htmlFor=\"complaint_status\">Change Complaint Status</InputLabel>\n                                        <Select\n                                            value={this.state.new_complaint_status}\n                                            onChange={this.handleChange}\n                                            inputProps={{\n                                                name: 'new_complaint_status',\n                                                id: 'new_complaint_status',\n                                            }} >\n                                            <MenuItem value=\"Pending\" disabled>Pending</MenuItem>\n                                            <MenuItem value=\"Approved\">Approved</MenuItem>\n                                            <MenuItem value=\"Rejected\">Rejected</MenuItem>\n                                            <MenuItem value=\"In Progress\">In Progress</MenuItem>\n                                            <MenuItem value=\"Completed\">Completed</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                            <Grid container>\n                                <Grid item xs={12} md className={classes.textWrapper}>\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                        <Typography variant=\"caption\">Set Estimated Date</Typography>\n                                        <DatePicker \n                                            error={this.state.estimated_time_Error}\n                                            helperText={this.state.estimated_time_helper_text}\n                                            value={this.state.new_estimated_time}\n                                            onChange={this.handleEstimatedDateChange}\n                                            style={{width: '100%'}}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </Grid>\n                                <Grid xs={12} md className={classes.textWrapper}>\n                                    <FormControl className={classes.formControl}>\n                                        <InputLabel htmlFor=\"new_forword_complaint\">Forword Complaint</InputLabel>\n                                        <Select\n                                            value={this.state.new_forword_complaint}\n                                            // onChange={this.handleChange}\n                                            inputProps={{\n                                                name: 'new_forword_complaint',\n                                                id: 'new_forword_complaint',\n                                            }}\n                                             >\n                                            <MenuItem value=\"Pending\" disabled>Pending</MenuItem>\n                                            <MenuItem value=\"Approved\">Approved</MenuItem>\n                                            <MenuItem value=\"Rejected\">Rejected</MenuItem>\n                                            <MenuItem value=\"In Progress\">In Progress</MenuItem>\n                                            <MenuItem value=\"Completed\">Completed</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                            <br />\n                            <TextField\n                                id=\"Comment\"\n                                label=\"Comment\"\n                                multiline\n                                error={this.state.comment_error}\n                                helperText={this.state.comment_helper_text}\n                                rows=\"4\"\n                                onChange={this.handleComment}\n                                // defaultValue=\"Enter Your Coment Here..\"\n                                className={classes.textField}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                style={{margin: '10px'}}\n                                margin=\"normal\" />\n                        </Grid>\n                    </Grid>\n                    {/* <Grid container>\n                        <Grid item xs={12} md className={classes.paddingClass}>\n                            \n                        </Grid>\n                        <Grid item xs={12} md className={classes.paddingClass}>\n                        \n                        </Grid>\n                    </Grid> */}\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nComplaintFullView.propTypes = {\nclasses: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ComplaintFullView);"]},"metadata":{},"sourceType":"module"}