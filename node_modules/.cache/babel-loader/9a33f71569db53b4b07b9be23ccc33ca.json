{"ast":null,"code":"var _jsxFileName = \"E:\\\\Codes\\\\react\\\\portal\\\\src\\\\Components\\\\DashboardCard.js\";\nimport React from 'react';\nimport classNames from 'classnames'; // import { Route, Switch, Redirect } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Zoom from '@material-ui/core/Zoom';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nvar styles = function styles(theme) {\n  return {\n    Card: {\n      minWidth: '150px',\n      // display:'inline-block', \n      margin: '15px',\n      position: 'relative',\n      color: 'white'\n    },\n    CardButton: {\n      width: '100%',\n      backgroundColor: theme.palette.primary.main,\n      color: 'white',\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark\n      }\n    },\n    topLeft: {\n      position: 'absolute',\n      top: '-5px',\n      left: '-5px',\n      borderLeft: '1px solid black',\n      borderTop: '1px solid black',\n      height: '30px',\n      width: '30px'\n    },\n    bottomRight: {\n      position: 'absolute',\n      bottom: '-5px',\n      right: '-5px',\n      borderBottom: '1px solid black',\n      borderRight: '1px solid black',\n      height: '30px',\n      width: '30px'\n    },\n    primary: {\n      backgroundColor: 'rgba(0, 0, 255, 0.1)'\n    },\n    danger: {\n      backgroundColor: 'rgba(255, 0, 0, 0.1)'\n    },\n    alert: {\n      backgroundColor: 'rgba(155, 100, 0, 0.1)'\n    },\n    success: {\n      backgroundColor: 'rgba(0, 255, 0, 0.1)'\n    }\n  };\n};\n\nvar CardBox = function CardBox(props) {\n  var classes = props.classes;\n\n  function getClassName(CardColor) {\n    switch (CardColor) {\n      case 'primary':\n        return classes.primary;\n\n      case 'danger':\n        return classes.danger;\n\n      case 'alert':\n        return classes.alert;\n\n      case 'success':\n        return classes.success;\n\n      default:\n        return -1;\n    }\n  }\n\n  return React.createElement(Zoom, {\n    in: props.startAnimation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classNames(classes.Card, getClassName(props.CardColor)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.topLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"display1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(props.CardIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, props.CardName), React.createElement(Typography, {\n    variant: \"caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Complaints\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"display2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, props.CardValue)), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.CardButton,\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"view\")), React.createElement(\"div\", {\n    className: classes.bottomRight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })));\n};\n\nCardBox.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CardBox);","map":{"version":3,"sources":["E:\\Codes\\react\\portal\\src\\Components\\DashboardCard.js"],"names":["React","classNames","PropTypes","withStyles","Zoom","CardActions","CardContent","Button","Typography","styles","theme","Card","minWidth","margin","position","color","CardButton","width","backgroundColor","palette","primary","main","dark","topLeft","top","left","borderLeft","borderTop","height","bottomRight","bottom","right","borderBottom","borderRight","danger","alert","success","CardBox","props","classes","getClassName","CardColor","startAnimation","CardName","CardValue","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n// import { Route, Switch, Redirect } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Zoom from '@material-ui/core/Zoom';\n\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst styles = theme => ({\n    Card: { \n        minWidth: '150px', \n        // display:'inline-block', \n        margin: '15px',\n        position: 'relative',\n        color: 'white'\n    },\n    CardButton: {\n        width:'100%',\n        backgroundColor: theme.palette.primary.main,\n        color: 'white',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.dark\n        }\n    },\n    topLeft: {\n        position: 'absolute',\n        top: '-5px',\n        left: '-5px',\n        borderLeft: '1px solid black',\n        borderTop: '1px solid black',\n        height: '30px',\n        width: '30px'\n    },\n    bottomRight: {\n        position: 'absolute',\n        bottom: '-5px',\n        right: '-5px',\n        borderBottom: '1px solid black',\n        borderRight: '1px solid black',\n        height: '30px',\n        width: '30px'\n    },\n    primary: {\n        backgroundColor: 'rgba(0, 0, 255, 0.1)',\n    },\n    danger: {\n        backgroundColor: 'rgba(255, 0, 0, 0.1)',\n    },\n    alert: {\n        backgroundColor: 'rgba(155, 100, 0, 0.1)',\n    },\n    success: {\n        backgroundColor: 'rgba(0, 255, 0, 0.1)',\n    }\n})\n\nconst CardBox = props => {\n    let { classes } = props;\n\n    function getClassName(CardColor) {\n        switch (CardColor) {\n            case 'primary': return classes.primary\n            case 'danger': return classes.danger\n            case 'alert': return classes.alert\n            case 'success': return classes.success\n            default: return -1;\n        }\n    }\n\n    return (\n        <Zoom in={props.startAnimation}>\n            <div className={classNames(classes.Card, getClassName(props.CardColor))}>\n                <div className={classes.topLeft}></div>\n                <CardContent>\n                    <Typography variant=\"display1\">{<props.CardIcon fontSize=\"large\" />}</Typography>\n                    <Typography variant=\"caption\">{props.CardName}</Typography>\n                    <Typography variant=\"caption\">Complaints</Typography>\n                    <br />\n                    <Typography variant=\"display2\">{props.CardValue}</Typography>\n                </CardContent>\n                <CardActions>\n                    <Button className={classes.CardButton} size=\"small\">view</Button>\n                </CardActions>\n                <div className={classes.bottomRight}></div>\n            </div>\n        </Zoom>\n    )\n}\n\nCardBox.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CardBox);"]},"metadata":{},"sourceType":"module"}