{"ast":null,"code":"import _classCallCheck from \"E:\\\\Codes\\\\react\\\\portal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Codes\\\\react\\\\portal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Codes\\\\react\\\\portal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Codes\\\\react\\\\portal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Codes\\\\react\\\\portal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Codes\\\\react\\\\portal\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { HashRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Login from './Authentication/';\nimport Dasboard from './Officer';\nimport AdminDasboard from './Admin';\nimport { getCookie } from './constants';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  //state of root app\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.setLogin = function () {\n      _this.setState({\n        isLoggedIn: true,\n        userType: 'officer'\n      });\n    };\n\n    _this.checkLoginStatus = function () {\n      if (_this.state.isLoggedIn) {\n        if (_this.state.userType === 'officer') return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        });else if (_this.state.userType === 'admin') return React.createElement(Redirect, {\n          to: \"/Admin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Login, {\n        setLogin: _this.setLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    };\n\n    _this.redirectIfNotLoggedInOfficer = function () {\n      return _this.state.isLoggedIn && _this.state.userType === 'officer' ? React.createElement(Dasboard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: \"/Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    };\n\n    _this.redirectIfNotLoggedInAdmin = function () {\n      return _this.state.isLoggedIn && _this.state.userType === 'admin' ? React.createElement(AdminDasboard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: \"/Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    };\n\n    var value = getCookie(\"roadGPortalAuth\");\n\n    if (value !== -1) {\n      _this.state = {\n        isLoggedIn: true,\n        userType: 'officer',\n        token: value\n      };\n    } else {\n      _this.state = {\n        isLoggedIn: false\n      };\n    }\n\n    return _this;\n  } //checking login status for login route\n\n\n  _createClass(App, [{\n    key: \"render\",\n    //main render method\n    value: function render() {\n      return React.createElement(HashRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/Login\",\n        render: this.checkLoginStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/Dashboard*\",\n        render: this.redirectIfNotLoggedInOfficer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/Admin\",\n        render: this.redirectIfNotLoggedInAdmin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Redirect, {\n        to: \"/Dashboard/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["E:\\Codes\\react\\portal\\src\\App.js"],"names":["React","Component","HashRouter","Route","Redirect","Switch","Login","Dasboard","AdminDasboard","getCookie","App","props","setLogin","setState","isLoggedIn","userType","checkLoginStatus","state","redirectIfNotLoggedInOfficer","redirectIfNotLoggedInAdmin","value","token"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { HashRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nimport Login from './Authentication/';\nimport Dasboard from './Officer';\nimport AdminDasboard from './Admin';\n\nimport { getCookie } from './constants';\n\nclass App extends Component {\n\n  //state of root app\n  \n\n  setLogin = () => {\n    this.setState({\n      isLoggedIn: true,\n      userType: 'officer'\n    })     \n  }\n\n  constructor(props) {\n    super(props);\n    let value = getCookie(\"roadGPortalAuth\");\n    if(value !== -1) {\n      this.state = {\n        isLoggedIn: true,\n        userType: 'officer',\n        token: value\n      }\n    } else {\n      this.state = {\n        isLoggedIn: false,\n      }\n    }\n  }\n\n  //checking login status for login route\n  checkLoginStatus = () => {\n    if(this.state.isLoggedIn) {\n      if(this.state.userType === 'officer') return (<Redirect to=\"/\" />)\n      else if(this.state.userType === 'admin') return (<Redirect to=\"/Admin\" />)\n    }\n    return (<Login setLogin={this.setLogin} />)\n  }\n\n  //checking login status for office dashboard\n  redirectIfNotLoggedInOfficer = () => {\n    return this.state.isLoggedIn && this.state.userType === 'officer' ? (<Dasboard />) : <Redirect to=\"/Login\" />;\n  }\n\n  //checking login status for admin dashboard\n  redirectIfNotLoggedInAdmin = () => {\n    return this.state.isLoggedIn && this.state.userType === 'admin' ? (<AdminDasboard />) : <Redirect to=\"/Login\" />;\n  }\n\n  //main render method\n  render() {\n    return (\n      <HashRouter>\n        <div>\n          {/* main routes for app */}\n          <Switch>\n            <Route exact path=\"/Login\" render={this.checkLoginStatus} />\n            <Route exact path=\"/Dashboard*\" render={this.redirectIfNotLoggedInOfficer} />\n            <Route path=\"/Admin\" render={this.redirectIfNotLoggedInAdmin} />\n            <Route exact path=\"/\">\n              <Redirect to=\"/Dashboard/\" />\n            </Route>\n          </Switch>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}