{"ast":null,"code":"import _classCallCheck from \"E:\\\\Codes\\\\Github\\\\roadWebPortal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Codes\\\\Github\\\\roadWebPortal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Codes\\\\Github\\\\roadWebPortal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Codes\\\\Github\\\\roadWebPortal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Codes\\\\Github\\\\roadWebPortal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Codes\\\\Github\\\\roadWebPortal\\\\src\\\\Officer\\\\ComplaintReport.js\";\nimport React, { Component } from 'react';\nimport { PieChart, Pie, Sector, Cell } from 'recharts';\nimport { LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nvar _default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_default, _Component);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_default).apply(this, arguments));\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var data2 = [{\n        name: 'Group A',\n        value: 400\n      }, {\n        name: 'Group B',\n        value: 300\n      }, {\n        name: 'Group C',\n        value: 300\n      }, {\n        name: 'Group D',\n        value: 200\n      }];\n      var data = [{\n        name: 'Page A',\n        uv: 4000,\n        pv: 2400,\n        amt: 2400\n      }, {\n        name: 'Page B',\n        uv: 3000,\n        pv: 1398,\n        amt: 2210\n      }, {\n        name: 'Page C',\n        uv: 2000,\n        pv: 9800,\n        amt: 2290\n      }, {\n        name: 'Page D',\n        uv: 2780,\n        pv: 3908,\n        amt: 2000\n      }, {\n        name: 'Page E',\n        uv: 1890,\n        pv: 4800,\n        amt: 2181\n      }, {\n        name: 'Page F',\n        uv: 2390,\n        pv: 3800,\n        amt: 2500\n      }, {\n        name: 'Page G',\n        uv: 3490,\n        pv: 4300,\n        amt: 2100\n      }];\n      var COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n      var RADIAN = Math.PI / 180;\n\n      var renderCustomizedLabel = function renderCustomizedLabel(_ref) {\n        var cx = _ref.cx,\n            cy = _ref.cy,\n            midAngle = _ref.midAngle,\n            innerRadius = _ref.innerRadius,\n            outerRadius = _ref.outerRadius,\n            percent = _ref.percent,\n            index = _ref.index;\n        var radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n        var x = cx + radius * Math.cos(-midAngle * RADIAN);\n        var y = cy + radius * Math.sin(-midAngle * RADIAN);\n        console.log(\"\".concat((percent * 100).toFixed(0), \"%\"));\n        console.log(\"Hello\");\n        return React.createElement(\"text\", {\n          x: x,\n          y: y,\n          fill: \"white\",\n          textAnchor: x > cx ? 'start' : 'end',\n          dominantBaseline: \"central\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"\".concat((percent * 100).toFixed(0), \"%\"));\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(PieChart, {\n        width: 800,\n        height: 400,\n        onMouseEnter: this.onPieEnter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Pie, {\n        data: data2 //dataKey=\"uv\"\n        ,\n        cx: 300,\n        cy: 200,\n        labelLine: false,\n        label: renderCustomizedLabel,\n        outerRadius: 80,\n        fill: \"#8884d8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, data.map(function (entry, index) {\n        return React.createElement(Cell, {\n          fill: COLORS[index % COLORS.length],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      }))), React.createElement(LineChart, {\n        width: 400,\n        height: 400,\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"uv\",\n        stroke: \"#8884d8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(CartesianGrid, {\n        stroke: \"#ccc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(BarChart, {\n        width: 600,\n        height: 300,\n        data: data,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        dataKey: \"pv\",\n        fill: \"#8884d8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        dataKey: \"uv\",\n        fill: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["E:\\Codes\\Github\\roadWebPortal\\src\\Officer\\ComplaintReport.js"],"names":["React","Component","PieChart","Pie","Sector","Cell","LineChart","Line","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","data2","name","value","data","uv","pv","amt","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","console","log","toFixed","onPieEnter","map","entry","length","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { PieChart, Pie, Sector, Cell } from 'recharts';\r\nimport { LineChart, Line ,BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\nexport default class   extends Component {\r\n   \r\n  render() {\r\n    const data2 = [{name: 'Group A', value: 400}, {name: 'Group B', value: 300},\r\n    {name: 'Group C', value: 300}, {name: 'Group D', value: 200}];\r\n    \r\n    const data = [\r\n        {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\r\n        {name: 'Page B', uv: 3000, pv: 1398, amt: 2210},\r\n        {name: 'Page C', uv: 2000, pv: 9800, amt: 2290},\r\n        {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\r\n        {name: 'Page E', uv: 1890, pv: 4800, amt: 2181},\r\n        {name: 'Page F', uv: 2390, pv: 3800, amt: 2500},\r\n        {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\r\n    ];\r\n    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n    const RADIAN = Math.PI / 180;  \r\n    const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n     const x  = cx + radius * Math.cos(-midAngle * RADIAN);\r\n     const y = cy  + radius * Math.sin(-midAngle * RADIAN);\r\n    console.log(`${(percent * 100).toFixed(0)}%`);\r\n    console.log(\"Hello\");\r\n    \r\n     return (\r\n       <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} \tdominantBaseline=\"central\">\r\n           {`${(percent * 100).toFixed(0)}%`}\r\n       </text>\r\n     );\r\n   };\r\n\r\n    return (\r\n      <div>\r\n        <PieChart width={800} height={400} onMouseEnter={this.onPieEnter}>\r\n            <Pie\r\n            data={data2} \r\n            //dataKey=\"uv\"\r\n            cx={300} \r\n            cy={200} \r\n            labelLine={false}\r\n            label={renderCustomizedLabel}\r\n            outerRadius={80} \r\n            fill=\"#8884d8\"\r\n            >\r\n            { data.map((entry, index) => <Cell fill={COLORS[index % COLORS.length]}/>) }\r\n            </Pie>\r\n      </PieChart>\r\n\r\n      <LineChart width={400} height={400} data={data}>\r\n        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n            <CartesianGrid stroke=\"#ccc\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis />\r\n      </LineChart>\r\n\r\n      <BarChart width={600} height={300} data={data}\r\n            margin={{top: 5, right: 30, left: 20, bottom: 5}}>\r\n       <CartesianGrid strokeDasharray=\"3 3\"/>\r\n       <XAxis dataKey=\"name\"/>\r\n       <YAxis/>\r\n       <Tooltip/>\r\n       <Legend />\r\n       <Bar dataKey=\"pv\" fill=\"#8884d8\" />\r\n       <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\r\n      </BarChart>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}   \r\n"]},"metadata":{},"sourceType":"module"}